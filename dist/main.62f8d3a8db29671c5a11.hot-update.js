"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatepustanotes_2"]("main",{

/***/ "./src/scripts/utils/utils.js":
/*!************************************!*\
  !*** ./src/scripts/utils/utils.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Utils {\r\n  static AddGlobalStyle(parentElement) {\r\n    const styleSheet = document.createElement(\"style\");\r\n\r\n    styleSheet.textContent = `\r\n              :root { --main-color: #DCF2F1; --secondary-color: #7FC7D9; --third-color: #365486; --fourth-color: #0F1035; --background-clr: linear-gradient(150deg, rgba(180, 198, 197, 1) 3%, rgba(193, 205, 205, 1) 33%, rgba(220, 242, 241, 1) 63%, rgba(255, 255, 255, 1) 93%); } * { margin: 0; padding: 0; box-sizing: border-box; text-decoration: none; outline: none; border: none; text-transform: capitalize; transition: all .4s ease-in-out; animation: opacity_fade_in 0.2s; } a { color: inherit !important; text-decoration: none !important; } a[disabled=\"disabled\"] { pointer-events: none; /* cursor: wait; */ } .button { background-color: var(--third-color); color: var(--main-color) !important; padding: 0.75rem 2rem; border-radius: 2rem; display: flex; } section { margin: 3rem auto; } main .container-section { background-color: var(--main-color); padding: 1rem; border-radius: 1rem; box-shadow: 0 0px 8px rgba(85, 97, 110, 0.9); position: relative; } main .container-section { background-size: 600% 600%; -webkit-animation: gradien_background 9s ease infinite; -moz-animation: gradien_background 9s ease infinite; animation: gradien_background 9s ease infinite; } .button:hover { color: var(--main-color) !important; background-color: #1b2d4c; }\r\n      `;\r\n\r\n    parentElement.appendChild(styleSheet);\r\n  }\r\n\r\n  static AddContainerStyle(parentElement) {\r\n    const styleSheet = document.createElement(\"style\");\r\n\r\n    const styles = `\r\n              .container { width: 100%; padding-right: 15px; padding-left: 15px; margin-right: auto; margin-left: auto; } @media (min-width: 576px) { .container { max-width: 540px; } } @media (min-width: 768px) { .container { max-width: 720px; } } @media (min-width: 992px) { .container { max-width: 960px; } } @media (min-width: 1200px) { .container { max-width: 1140px; } } @media (min-width: 1400px) { .container { max-width: 1320px; } } @media (min-width: 1700px) { .container { max-width: 1512px; } } .container.full { max-width: 100%; }\r\n      `;\r\n\r\n    styleSheet.textContent = styles;\r\n    parentElement.appendChild(styleSheet);\r\n  }\r\n\r\n  static AddFontStyle(parentElement) {\r\n    const styleSheet = document.createElement(\"style\");\r\n\r\n    const styles = `\r\n              @font-face { font-family: 'Poppins'; font-weight: 900; font-style: normal; src: url('../../src/fonts/Poppins/Poppins-Black.ttf') format('truetype'); } @font-face { font-family: 'Poppins'; font-weight: 700; font-style: normal; src: url('../../src/fonts/Poppins/Poppins-Bold.ttf') format('truetype'); } @font-face { font-family: 'Poppins'; font-weight: 500; font-style: normal; src: url('../../src/fonts/Poppins/Poppins-Medium.ttf') format('truetype'); } @font-face { font-family: 'Poppins'; font-weight: 400; font-style: normal; src: url('../../src/fonts/Poppins/Poppins-Regular.ttf') format('truetype'); } @font-face { font-family: 'Poppins'; font-weight: 100; font-style: normal; src: url('../../src/fonts/Poppins/Poppins-Thin.ttf') format('truetype'); } @font-face { font-family: 'Poppins'; font-weight: 100; font-style: italic; src: url('../../src/fonts/Poppins/Poppins-ThinItalic.ttf') format('truetype'); }\r\n      `;\r\n\r\n    styleSheet.textContent = styles;\r\n    parentElement.appendChild(styleSheet);\r\n  }\r\n\r\n  static AddAnimationStyle(parentElement) {\r\n    const styleSheet = document.createElement(\"style\");\r\n\r\n    const styles = `\r\n              @-webkit-keyframes gradien_background { 0% { background-position: 0% 50% } 50% { background-position: 100% 50% } 100% { background-position: 0% 50% } } @-moz-keyframes gradien_background { 0% { background-position: 0% 50% } 50% { background-position: 100% 50% } 100% { background-position: 0% 50% } } @keyframes gradien_background { 0% { background-position: 0% 50% } 50% { background-position: 100% 50% } 100% { background-position: 0% 50% } } @-webkit-keyframes topToDown { 0% { top: -3rem } 50% { top: -1.5rem } 0% { top: 0 } } @-moz-keyframes topToDown { 0% { top: -3rem } 50% { top: -1.5rem } 0% { top: 0 } } @keyframes topToDown { 0% { top: -3rem } 50% { top: -1.5rem } 0% { top: 0 } } @-webkit-keyframes opacity_fade_in { 0% { opacity: 0 } 50% { opacity: 0.5 } 100% { opacity: 1 } } @-moz-keyframes opacity_fade_in { 0% { opacity: 0 } 50% { opacity: 0.5 } 100% { opacity: 1 } } @keyframes opacity_fade_in { 0% { opacity: 0 } 50% { opacity: 0.5 } 100% { opacity: 1 } } .animated { opacity: 0; transform: translateY(-3rem); animation: fadeInUp .5s ease forwards; } @keyframes fadeInUp { from { opacity: 0; transform: translateY(-3rem); } to { opacity: 1; transform: translateY(0); } } .animated:nth-child(1) { animation-delay: .1s; } .animated:nth-child(2) { animation-delay: .2s; } .animated:nth-child(3) { animation-delay: .3s; } .animated:nth-child(4) { animation-delay: .4s; } .animated:nth-child(5) { animation-delay: .5s; } *.reveal { scale: 0.94; opacity: 0; transition: 0.9s; transition-timing-static: cubic-bezier(0.5, 0, 0, 1); } .revealOn { opacity: 1; top: 0; scale: 1; } /* TOOLTIP */ li[data-tooltip].tooltip:before, li[data-tooltip].tooltip:after { transform: translateY(10px); } li[data-tooltip].tooltip:hover:after, li[data-tooltip].tooltip:hover:before { transform: translateY(0px); } li[data-tooltip] { position: relative; } li[data-tooltip]:after, li[data-tooltip]:before { position: absolute; visibility: hidden; opacity: 0; transition: transform 200ms ease, opacity 200ms; box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); z-index: 99; } li[data-tooltip]:before { content: attr(data-tooltip); background: #000; color: #fff; font-size: 0.8rem; font-weight: bold; padding: 10px 15px; border-radius: 5px; white-space: nowrap; text-decoration: none; text-transform: uppercase; letter-spacing: 1px; } li[data-tooltip]:after { width: 0; height: 0; border: 6px solid transparent; content: ''; } li[data-tooltip]:hover:after, li[data-tooltip]:hover:before { visibility: visible; opacity: 0.85; transform: translateY(0px); } li[data-tooltip][data-position=\"top\"]:before { bottom: 100%; left: -130%; margin-bottom: 9px; } li[data-tooltip][data-position=\"top\"]:after { border-top-color: #000; border-bottom: none; bottom: 101%; left: calc(50% - 6px); margin-bottom: 4px; } .checkmark { width: 100px; height: 100px; border-radius: 50%; display: block; stroke-width: 2; stroke: white; stroke-miterlimit: 10; box-shadow: inset 0px 0px 0px var(--third-color); animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both; position: relative; top: 5px; margin: 0 auto; } .checkmark__circle { stroke-dasharray: 166; stroke-dashoffset: 166; stroke-width: 2px; stroke-miterlimit: 10; stroke: white; fill: var(--third-color); animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards; } circle.checkmark__circle2 { stroke-dasharray: 195; stroke-dashoffset: 195; stroke-width: 10px; stroke-miterlimit: 6; } .checkmark__check { transform-origin: 50% 50%; stroke-dasharray: 48; stroke-dashoffset: 48; animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards; } @keyframes stroke { 100% { stroke-dashoffset: 0; } } @keyframes scale { 0%, 100% { transform: none; } 50% { transform: scale3d(1.1, 1.1, 1); } } @keyframes fill { 100% { box-shadow: inset 0px 0px 0px 30px var(--third-color); } }\r\n      `;\r\n\r\n    styleSheet.textContent = styles;\r\n    parentElement.appendChild(styleSheet);\r\n  }\r\n\r\n  static setAttributeIfNotNull(parents = document, selector, property, value) {\r\n    var elements = parents.querySelectorAll(selector);\r\n    elements.forEach(function (element) {\r\n      if (element !== null) {\r\n        if (property === \"style\") {\r\n          var styles = value.split(\";\");\r\n          styles.forEach(function (style) {\r\n            if (style.trim() !== \"\") {\r\n              var parts = style.split(\":\");\r\n              var styleName = parts[0].trim();\r\n              var styleValue = parts[1].trim();\r\n              element.style[styleName] = styleValue;\r\n            }\r\n          });\r\n        } else if (property === \"class\") {\r\n          element.className = value;\r\n        } else if (property === \"dataset\") {\r\n          var data = value.split(\",\");\r\n          data.forEach(function (item) {\r\n            if (item.trim() !== \"\") {\r\n              var parts = item.split(\":\");\r\n              var dataName = parts[0].trim();\r\n              var dataValue = parts[1].trim();\r\n              element.dataset[dataName] = dataValue;\r\n            }\r\n          });\r\n        } else if (property === \"text\") {\r\n          element.innerHTML = value;\r\n        } else {\r\n          element[property] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static checkWindowWidth(parents) {\r\n    if (\r\n      window.matchMedia(\"(min-width: 992px) and (max-width: 1200px)\").matches\r\n    ) {\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header\",\r\n        \"style\",\r\n        \"flex-direction: column; height: auto;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header .container-navbar\",\r\n        \"style\",\r\n        \"justify-content: center;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \"main .container-greet-button\",\r\n        \"style\",\r\n        \"font-size: 1rem;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header .navbar\",\r\n        \"style\",\r\n        \"width: 100%;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".list-service .item\",\r\n        \"style\",\r\n        \"flex: 0 0 40%; margin: 1.5rem;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".container-login .login-form\",\r\n        \"style\",\r\n        \"margin: 5rem 0;\",\r\n      );\r\n    } else {\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header\",\r\n        \"style\",\r\n        \"flex-direction: ;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header .container-navbar\",\r\n        \"style\",\r\n        \"justify-content: ;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".header .navbar\",\r\n        \"style\",\r\n        \"width: ;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \"main .container-greet-button\",\r\n        \"style\",\r\n        \"font-size: ;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".list-service .item\",\r\n        \"style\",\r\n        \"flex: ; margin: ;\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".container-login .login-form\",\r\n        \"style\",\r\n        \"margin: ;\",\r\n      );\r\n    }\r\n    if (window.matchMedia(\"(max-width: 992px)\").matches) {\r\n      this.setAttributeIfNotNull(parents, \".menu\", \"style\", \"display: block;\");\r\n      this.manipulateClass(parents, \".header\", \"addClass\", \"mobile\");\r\n      this.manipulateClass(parents, \".greet\", \"addClass\", \"mobile\");\r\n      this.manipulateClass(\r\n        parents,\r\n        \".container-about_us\",\r\n        \"addClass\",\r\n        \"mobile\",\r\n      );\r\n      this.manipulateClass(parents, \".footer\", \"addClass\", \"mobile\");\r\n      this.manipulateClass(parents, \".container-login\", \"addClass\", \"mobile\");\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".container-login .navigation>a>.content_text\",\r\n        \"text\",\r\n        \"\",\r\n      );\r\n    } else {\r\n      this.setAttributeIfNotNull(parents, \".menu\", \"style\", \"display: none;\");\r\n      this.manipulateClass(parents, \".header\", \"removeClass\", \"mobile\");\r\n      this.manipulateClass(parents, \".greet\", \"removeClass\", \"mobile\");\r\n      this.manipulateClass(\r\n        parents,\r\n        \".container-about_us\",\r\n        \"removeClass\",\r\n        \"mobile\",\r\n      );\r\n      this.manipulateClass(parents, \".footer\", \"removeClass\", \"mobile\");\r\n      this.manipulateClass(\r\n        parents,\r\n        \".container-login\",\r\n        \"removeClass\",\r\n        \"mobile\",\r\n      );\r\n      this.setAttributeIfNotNull(\r\n        parents,\r\n        \".container-login .navigation>a>.content_text\",\r\n        \"text\",\r\n        \"Kembali Ke Beranda\",\r\n      );\r\n    }\r\n  }\r\n\r\n  static manipulateClass(parents = document, element, action, className) {\r\n    var targetElement = parents.querySelector(element);\r\n    if (targetElement) {\r\n      if (action === \"addClass\") {\r\n        targetElement.classList.add(className);\r\n      } else if (action === \"removeClass\") {\r\n        targetElement.classList.remove(className);\r\n      }\r\n    }\r\n  }\r\n\r\n  static generalConfirmDialogBuilder() {\r\n    /**\r\n     *\r\n     * @param {object} element - The Object that wrapper of confirmBox should be placed on last child using element.appenchild(confirmboxwrapper). Ex: document.body\r\n     * @param {object} params - Object that how if \"Ok Button\" or \"Cancel Button\"  be executed. Example: { ok: function () { functionWhenOkButtonClicked() }, cancel: function () { functionWhenCancelButtonClicked() }\r\n     * @param {string inside array} title - Array that contain a string of Title in confirm box. Ex: ['INI JUDUL CONFIRM BOX']\r\n     * @param {string inside array} value - Array that contain a string of Title in confirm box. Ex: ['Box ini merupakan box confirmation pengganti sweet alert']\r\n     * @param {boolean} showSuccess - Boolean apakah menampilkan prompt success ketika di klik OK\r\n     * @param {string inside array} ok_value - string yang akan ditampilkan di tombol OK\r\n     * @param {string inside array} cancel_value - string yang akan ditampilkan di dalam tombol Cancel\r\n     * example params\r\n     * var ConfirmBox = Utils.generalConfirmDialogBuilder();\r\n        var confBox = new ConfirmBox(\r\n          document.body,\r\n          {\r\n            ok: async function () {\r\n              const { response, responseJson, error } = await NotesApi.deleteNoteById(note_id);\r\n              if (error || !response.ok) {\r\n                confBox.failed(confBox.instance);\r\n              } else {\r\n                confBox.success(confBox.instance);\r\n              }\r\n            },\r\n            cancel: function () {\r\n              return;\r\n            },\r\n          },\r\n          [`Arsipkan Catatan?`, \"Yakin?\"],\r\n          [\r\n            `Apakah anda yakin ingin mengarsipkan catatan dengan judul: ${note_title}`,\r\n            \"Apakah Anda Yakin?\",\r\n          ],\r\n          true,\r\n          \"Arsipkan\",\r\n          \"Batal\",\r\n          \"Sukses Mengarsipkan\",\r\n          true,\r\n          \"Sedang Mengarsipkan\",\r\n          \"Gagal Mengarsipkan\"\r\n        );\r\n     * \r\n     */\r\n\r\n    function ConfirmBox(\r\n      element,\r\n      params,\r\n      title,\r\n      value,\r\n      showSuccess,\r\n      ok_value,\r\n      cancel_value,\r\n      successValue,\r\n      showLoading,\r\n      loadingValue,\r\n      failedValue\r\n    ) {\r\n      this.element = element || document.body;\r\n      this.params = params || {};\r\n      this.params.ok = params.ok;\r\n      this.params.cancel = params.cancel;\r\n      this.title = title || {};\r\n      this.value = value || {};\r\n      this.showSuccess = showSuccess === false ? false : true;\r\n      this.ok_value = ok_value || \"OK\";\r\n      this.cancel_value = cancel_value || \"Batal\";\r\n      this.successValue = successValue || \"Sukses\";\r\n      this.showLoading = showLoading\r\n      this.loadingValue = loadingValue || \"Sedang Memproses\"\r\n      this.failedValue = failedValue || \"Gagal!\"\r\n      this.init();\r\n    }\r\n    ConfirmBox.prototype = {\r\n      init: function () {\r\n        this.instance = null;\r\n        this.parent_ = null;\r\n        this.status = null;\r\n        this.create();\r\n        this.layout();\r\n        this.styling();\r\n        this.actions();\r\n      },\r\n      create: function () {\r\n        if (document.querySelector(\"#confirm-wrapper\") === null) {\r\n          const parent_ = document.createElement(\"div\")\r\n          parent_.id = \"confirm-parent\";\r\n          var wrapper = document.createElement(\"div\");\r\n          wrapper.id = \"confirm-wrapper\";\r\n          var html =\r\n            \"<div id='confirm-box'><h2 id='confirm-header-title'></h2><h2 id='confirm-header'></h2>\";\r\n          if (this.params.ok) {\r\n            html += `<div id='confirm-buttons'><button id='confirm-ok'>${this.ok_value}</button>`;\r\n          }\r\n          if (this.params.cancel) {\r\n            html += `<button type='button' id='confirm-cancel'>${this.cancel_value}</button></div>`;\r\n          }\r\n          html += \"</div>\";\r\n          wrapper.innerHTML = html;\r\n          parent_.appendChild(wrapper);\r\n          this.element.appendChild(parent_);\r\n        }\r\n        this.instance = document.querySelector(\"#confirm-wrapper\");\r\n        this.parent_ = document.querySelector(\"#confirm-parent\");\r\n      },\r\n      layout: function () {\r\n        var wrapper = this.instance;\r\n        var winHeight =\r\n          window.innerHeight ||\r\n          document.documentElement.clientHeight ||\r\n          document.body.clientHeight;\r\n        wrapper.style.height = winHeight + \"px\";\r\n      },\r\n\r\n      styling: function () {\r\n        let styleGeneral = document.createElement(\"style\");\r\n        let stylesGeneral =\r\n          `\r\n        #confirm-wrapper{width:100%;position:fixed;top:0;left:0;z-index:1000000;background:rgba(204,204,204,.6);display:none;transition:opacity .5s ease-in;height:1378px;display:flex;opacity:1;flex-direction:column;flex-wrap:nowrap;align-content:center;justify-content:center;align-items:center}#confirm-box{width:350px;background:var(--third-color);min-height:200px;border:3px solid var(--fourth-color);border-radius:1rem;COLOR:white;display:flex;flex-direction:column;align-content:center;flex-wrap:nowrap;align-items:center;justify-content:center;padding:0 1rem}#confirm-buttons{width:100%;text-align:center;bottom:0;left:0;padding-bottom:1em}#confirm-buttons button{display:inline-block;background:0 0;color:#fff;font-size:1em;font-family:Lato,Arial,sans-serif;font-weight:700;cursor:pointer;text-transform:uppercase;border:2px solid;margin:0 1em;padding:.6em 0;width:120px;border-radius:1rem}#confirm-header{text-align:center;font-size:1em;font-weight:400;text-transform:none;margin:2.5em 0 1.5em}#confirm-header:after{content:' ';display:block;width:1em;margin:.4em auto}#confirm-header-title{text-align:center;font-size:1rem;margin:1rem 0 0}.checkmark{width:100px;height:100px;border-radius:50%;display:block;stroke-width:2;stroke:white;stroke-miterlimit:10;box-shadow:inset 0 0 0 var(--third-color);animation:.4s ease-in-out .4s forwards fill,.3s ease-in-out .9s both scale;position:relative;top:5px;margin:0 auto}.checkmark__circle{stroke-dasharray:166;stroke-dashoffset:166;stroke-width:2px;stroke-miterlimit:10;stroke:white;fill:var(--third-color);animation:.6s cubic-bezier(.65,0,.45,1) forwards stroke}circle.checkmark__circle2{stroke-dasharray:195;stroke-dashoffset:195;stroke-width:10px;stroke-miterlimit:6}.checkmark__check{transform-origin:50% 50%;stroke-dasharray:48;stroke-dashoffset:48;animation:.3s cubic-bezier(.65,0,.45,1) .8s forwards stroke}@keyframes stroke{100%{stroke-dashoffset:0}}.red-stroke{stroke:hsl(9,100%,50%)}.circular circle.path,.cross{stroke-linecap:round;opacity:1}.circular circle.path{stroke-dasharray:330;stroke-dashoffset:0;animation:1.5s ease-out draw-circle}@keyframes draw-circle{0%{stroke-dasharray:0,330;stroke-dashoffset:0;opacity:1}80%{stroke-dasharray:330,330;stroke-dashoffset:0;opacity:.4}100%{opacity:1}}.cross{stroke-width:10;position:absolute;top:54px;left:54px;width:40px;height:40px}.cross .first-line{animation:1.5s ease-out draw-first-line}.cross .second-line{animation:1.5s ease-out draw-second-line}@keyframes draw-first-line{0%{stroke-dasharray:0,56;stroke-dashoffset:1;opacity:1}50%{stroke-dasharray:0,0;stroke-dashoffset:1}80%{opacity:.4}100%{stroke-dasharray:56,0;stroke-dashoffset:70;opacity:1}}@keyframes draw-second-line{0%{stroke-dasharray:0,55;stroke-dashoffset:1;opacity:1}50%{stroke-dasharray:0,0;stroke-dashoffset:1}80%{opacity:.4}100%{stroke-dasharray:55,0;stroke-dashoffset:70;opacity:1}}\r\n        `;\r\n        styleGeneral.textContent = stylesGeneral;\r\n        this.parent_.appendChild(styleGeneral);\r\n      },\r\n\r\n      show: function (element) {\r\n        element.style.display = \"flex\";\r\n        element.style.opacity = 1;\r\n        this.status = \"show\";\r\n      },\r\n      hide: function (element) {\r\n        element.style.opacity = 0;\r\n        setTimeout(() => {\r\n          this.parent_.remove();\r\n        }, 1000);\r\n        this.status = \"hide\";\r\n      },\r\n      success: function (element) {\r\n        console.log(\"success dieksekusi\")\r\n        var element_success = `<div id='confirm-box'><svg class='checkmark' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 52 52' style='margin: 1rem;'><circle class='checkmark__circle2' cx='26' cy='26' r='30' fill='none'></circle><circle class='checkmark__circle' cx='26' cy='26' r='25' fill='none'></circle><path class='checkmark__check' fill='none' d='M14.1 27.2l7.1 7.2 16.7-16.8'></path></svg><h2 id='confirm-header-title' style='font-size: 1.5rem;margin: 1rem;'>${this.successValue}</h2><div id='confirm-buttons'><button id='confirm-ok'>OK</button></div></div>`;\r\n        element.innerHTML = element_success;\r\n        element.style.opacity = 1;\r\n        this.status = \"success\";\r\n        const confirmButton = element.querySelector(\"#confirm-ok\");\r\n        confirmButton.addEventListener(('click'), () => { setTimeout(() => { this.hide(element); }, 500); });\r\n      },\r\n      loading(element) {\r\n        const loadingHtml = `\r\n              <div id='confirm-box'>\r\n              <div class='loader'></div>\r\n                  <h2 id='confirm-header-title'>${this.loadingValue}<span class=\"wait\"></span></h2>\r\n              </div>\r\n              <style>.wait:after{content:' .';animation:2s steps(7,end) infinite dots}@keyframes dots{0%,20%{color:transparent;text-shadow:.25em 0 0 transparent,.5em 0 0 transparent}40%{color:#fff;text-shadow:.25em 0 0 transparent,.5em 0 0 transparent}60%{text-shadow:.25em 0 0 #fff,.5em 0 0 transparent}100%,80%{text-shadow:.25em 0 0 #fff,.5em 0 0 #fff}}</style>`;\r\n        element.innerHTML = loadingHtml;\r\n        element.style.opacity = 1;\r\n        this.status = \"loading\";\r\n        setTimeout(() => {\r\n          if (this.status == \"loading\") {\r\n            this.failed(element);\r\n          }\r\n        }, 15000);\r\n      },\r\n      failed(element, rincian) {\r\n        rincian = rincian || false;\r\n        const failedHtml = `\r\n              <div id='confirm-box'>\r\n                  <div style=\"position: relative;width: 150px;height: 150px;\">\r\n                      <svg class=\"circular red-stroke\">\r\n                          <circle class=\"path\" cx=\"75\" cy=\"75\" r=\"50\" fill=\"none\" stroke-width=\"10\" stroke-miterlimit=\"10\" />\r\n                      </svg>\r\n                      <svg class=\"cross red-stroke\">\r\n                          <g transform=\"matrix(0.79961,8.65821e-32,8.39584e-32,0.79961,-502.652,-204.518)\">\r\n                              <path class=\"first-line\" d=\"M634.087,300.805L673.361,261.53\" fill=\"none\" />\r\n                          </g>\r\n                          <g transform=\"matrix(-1.28587e-16,-0.79961,0.79961,-1.28587e-16,-204.752,543.031)\">\r\n                              <path class=\"second-line\" d=\"M634.087,300.805L673.361,261.53\" />\r\n                          </g>\r\n                      </svg>\r\n                  </div>\r\n                  <h2 id='confirm-header-title' style=\"margin:1rem auto;\">${this.failedValue}</h2>\r\n                  <div id='confirm-buttons'>\r\n                      <button id='confirm-ok'>OK</button>\r\n                  </div>\r\n              </div>`;\r\n        element.innerHTML = failedHtml;\r\n        element.style.opacity = 1;\r\n        this.status = \"failed\";\r\n        if (rincian) {\r\n          let that = this;\r\n          console.log(rincian);\r\n          const html_rincian = `<div id=\"rincian-buttons\" style=\"width:100%;text-align:center;bottom:0;left:0;padding-bottom:1em\"><button id=\"confirm-ok\" style=\"display:inline-block;background:0 0;color:#fff;font-family:Lato,Arial,sans-serif;font-weight:400;cursor:pointer;text-transform:uppercase;border:2px solid;margin:0 1em;padding:.6em 0;width:150px;border-radius:1rem\">Lihat Rincian</button></div>`;\r\n          const divRincian = document.createElement(\"div\");\r\n          divRincian.innerHTML = html_rincian;\r\n          const confirmBox = element.querySelector('#confirm-box');\r\n          confirmBox.appendChild(divRincian);\r\n          const rincianButton = divRincian.querySelector(\"#rincian-buttons\");\r\n          rincianButton.addEventListener(('click'), () => { showRincian() })\r\n          function showRincian() {\r\n            element.innerHTML = `<div id='confirm-box'><h2 id=\"confirm-header-title\">Error<h2><h2 id=\"confirm-header\">${rincian}</h2><div id=\"confirm-buttons\"><button id=\"confirm-ok-rincian\">Ok</button></div></div>`\r\n            const confirmButtonRincian = element.querySelector(\"#confirm-ok-rincian\");\r\n            confirmButtonRincian.addEventListener(('click'), () => { setTimeout(() => { that.hide(element); }, 100); });\r\n          }\r\n        }\r\n        const confirmButton = element.querySelector(\"#confirm-ok\");\r\n        confirmButton.addEventListener(('click'), () => { setTimeout(() => { this.hide(element); }, 500); });\r\n\r\n      },\r\n      actions: function () {\r\n        var self = this;\r\n        if (\r\n          self.value &&\r\n          Array.isArray(self.value) &&\r\n          self.title &&\r\n          Array.isArray(self.title)\r\n        ) {\r\n          self.instance.querySelector(\"#confirm-header\").innerHTML =\r\n            self.value[0];\r\n          self.instance.querySelector(\"#confirm-header-title\").innerHTML =\r\n            self.title[0];\r\n          var currentIndex = 1;\r\n          if (self.params.ok) {\r\n            self.instance.querySelector(\"#confirm-ok\").addEventListener(\r\n              \"click\",\r\n              function () {\r\n                if (currentIndex < self.value.length) {\r\n                  self.instance.querySelector(\"#confirm-header\").innerHTML =\r\n                    self.value[currentIndex];\r\n                  self.instance.querySelector(\r\n                    \"#confirm-header-title\",\r\n                  ).innerHTML = self.title[currentIndex];\r\n                  currentIndex++;\r\n                } else {\r\n                  console.log(`ss = ${self.showSuccess} sl = ${self.showLoading}`)\r\n                  if (self.showSuccess && !self.showLoading) {\r\n                    self.success(self.instance);\r\n                  } else if (self.showLoading) {\r\n                    self.loading(self.instance);\r\n                    async function showSuccess_s() {\r\n                      let execute_promise = new Promise(function () {\r\n                        self.params.ok()\r\n                      });\r\n                      result = await execute_promise;\r\n                    }\r\n                    showSuccess_s();\r\n                  }\r\n                  else {\r\n                    setTimeout(function () {\r\n                      self.hide(self.instance);\r\n                    }, 200);\r\n                  }\r\n                }\r\n              },\r\n              false,\r\n            );\r\n          }\r\n          if (self.params.cancel) {\r\n            self.instance.querySelector(\"#confirm-cancel\").addEventListener(\r\n              \"click\",\r\n              function () {\r\n                self.hide(self.instance);\r\n                setTimeout(function () {\r\n                  self.params.cancel();\r\n                }, 1000);\r\n              },\r\n              false,\r\n            );\r\n          }\r\n        } else {\r\n          if (self.element.dataset.question) {\r\n            self.instance.querySelector(\"#confirm-header\").innerHTML =\r\n              self.element.dataset.question;\r\n          } else if (self.value && typeof self.value === \"string\") {\r\n            self.instance.querySelector(\"#confirm-header\").innerHTML =\r\n              self.value;\r\n          }\r\n          if (self.element.dataset.tooltip) {\r\n            self.instance.querySelector(\"#confirm-header-title\").innerHTML =\r\n              self.element.dataset.tooltip;\r\n          } else if (self.title && typeof self.title === \"string\") {\r\n            self.instance.querySelector(\"#confirm-header-title\").innerHTML =\r\n              self.title;\r\n          }\r\n          self.show(self.instance);\r\n          if (self.params.ok) {\r\n            self.instance.querySelector(\"#confirm-ok\").addEventListener(\r\n              \"click\",\r\n              function () {\r\n                self.success(self.instance);\r\n                setTimeout(function () {\r\n                  self.params.ok();\r\n                }, 2000);\r\n              },\r\n              false,\r\n            );\r\n          }\r\n          if (self.params.cancel)\r\n            self.instance.querySelector(\"#confirm-cancel\").addEventListener(\r\n              \"click\",\r\n              function () {\r\n                self.hide(self.instance);\r\n                setTimeout(function () {\r\n                  self.params.cancel();\r\n                }, 1000);\r\n              },\r\n              false,\r\n            );\r\n        }\r\n      },\r\n    };\r\n    return ConfirmBox;\r\n  }\r\n\r\n  static formatDateToReadable(dateString) {\r\n    const days = [\r\n      \"Minggu\",\r\n      \"Senin\",\r\n      \"Selasa\",\r\n      \"Rabu\",\r\n      \"Kamis\",\r\n      \"Jumat\",\r\n      \"Sabtu\",\r\n    ];\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"Mei\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Okt\",\r\n      \"Nov\",\r\n      \"Des\",\r\n    ];\r\n\r\n    const date = new Date(dateString);\r\n    const dayName = days[date.getDay()];\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n\r\n    return `${day} ${month} ${year} ${hours}.${minutes} WIB`;\r\n  }\r\n\r\n  static truncateText(text, maxLength) {\r\n    if (text.length > maxLength) {\r\n      return text.slice(0, maxLength) + '...';\r\n    }\r\n    return text;\r\n  }\r\n  \r\n}\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);\r\n\n\n//# sourceURL=webpack://pustanotes_2/./src/scripts/utils/utils.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("5a3863e33bee6be628da")
/******/ })();
/******/ 
/******/ }
);